#!/usr/bin/env node

var util = require('util');
var vm = require('vm');
var fs = require('fs');


var argv = require('yargs')
  .options('o', {
      alias : 'output',
      default : '-',
      describe: 'output file'
  })
  .options('e', {
      alias : 'expo',
      default : '1',
      describe: 'exposure'
  })
   .help('h')
   .alias('h', 'help')
   .version('0.1.0', 'v')
   .alias('v', 'version')
   .argv;

var input = argv._[0];
var output= argv.o;
var expo = parseFloat( argv.e )

if( isNaN( expo ) ) expo = 1.0

if ( !input || input === '-') {
  throw new Error( 'no input' )
}
if ( output === '-') {
  throw new Error( 'no output' )
}


// load script
var scriptJs = fs.readFileSync( input, {
  encoding : 'utf-8'
})

// create a context
var sandbox = {
  module : {
    exports : 0
  }
};

// execute script in context
var context = new vm.createContext(sandbox);
var script = new vm.Script(scriptJs);
script.runInContext(context);

// get back datas
var coeffs = sandbox.module.exports;
var data = new Float32Array( coeffs );


// write datas to binary
var wstream = fs.createWriteStream(output);
var buffer = Buffer.alloc(data.length*4);
for(var i = 0; i < data.length; i++){
    buffer.writeFloatLE(data[i] * expo, i*4);
}

wstream.write(buffer);
wstream.end();